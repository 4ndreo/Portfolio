---
import type {CollectionEntry} from 'astro:content';
import * as Icons from './icons/index.astro';

interface Props {
	project: CollectionEntry<'work'>;
}

const {project} = Astro.props;
const {Content} = await project.render();
const {data, slug} = Astro.props.project;
const iconComponents: any = Icons;
---

<div class='hidden'>
<a class='card tilt' href={data.link}>
		<span class='title'>{data.title}</span>
		<img
			src={data.img}
			alt={data.img_alt || ''}
			loading='lazy'
			decoding='async'
		/>
		<div class='content'>
			<Content />
			<span class='project-visibility-flag'
				>{
					data.link ? (
						<>
							<i class='bi bi-globe-americas' />
							<span>View development</span>
						</>
					) : (
						<>
							<i class='bi-lock-fill' />
							<span>Private development</span>
							{/* {data?.tags.map((tag: any) => {
								const IconComponent = iconComponents[tag]; // Get the component reference
								
									if (IconComponent !== undefined) {
											<div class='brandLogo' title={tag}>
												<IconComponent />
											</div>
									} else {
										undefined
									}
							})} */}
						</>
					)
				}</span
			>
		</div>
	</a>
</div>

<style>
	.card {
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		height: 11rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		/* overflow: hidden; */
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
	}
	.hidden {
		overflow: hidden;
		border-radius: 0.75rem;
	}

	.card:hover {
		box-shadow: var(--shadow-md);
		margin-bottom: 12rem;
	}

	.card:hover .content {
		opacity: 100;
	}

	/* .content {
		opacity: 100;
		font-size: var(--text-base);
		font-family: var(--font-body);
		color: white;
		background-color: rgba(0, 0, 0, 0.75);
		padding: 1rem;
		position: fixed;
		bottom: 0;
		font-weight: 400;
		transition: all var(--theme-transition);
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		backdrop-filter: blur(0.5rem);
	} */

	.content {
		opacity: 0;
		font-size: var(--text-sm);
		font-family: var(--font-body);
		color: white;
		background-color: rgba(0, 0, 0, 0);
		padding: 1rem;
		position: absolute;
		top: 100%;
		font-weight: 400;
		transition: all var(--theme-transition);
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		backdrop-filter: blur(0.5rem);
	}

	.content .project-visibility-flag {
		color: var(--gray-300);
	}

	.title {
		grid-area: 1 / 1 / 2 / 2;
		z-index: 1;
		margin: 0.5rem;
		padding: 0.5rem 1rem;
		background: var(--gray-999);
		color: var(--gray-200);
		border-radius: 0.375rem;
	}

	.brandLogo {
		width: 100px;
		height: fit-content;
		align-items: center;
		margin: auto;
		overflow: hidden;
	}

	.brandLogo svg {
		width: 100px;
		height: 100px;
	}

	img {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
		object-position: top;
	}

	@media (min-width: 50em) {
		.card {
			height: 22rem;
			border-radius: 1.5rem;
		}

		.title {
			border-radius: 0.9375rem;
		}

		.content {
			opacity: 0;
			font-size: var(--text-base);
			font-family: var(--font-body);
			color: white;
			background-color: rgba(0, 0, 0, 0.75);
			padding: 1rem;
			position: fixed;
			top: unset;
			bottom: 0;
			font-weight: 400;
			transition: all var(--theme-transition);
			display: flex;
			flex-direction: column;
			gap: 0.5rem;
			backdrop-filter: blur(0.5rem);
		}

		.card:hover {
			box-shadow: var(--shadow-md);
			margin-bottom: unset;
		}
	}
</style>
